user							www;
worker_processes				auto; # it will be determinate automatically by the number of core

error_log						/var/log/nginx/error.log warn;
#pid							/var/run/nginx/nginx.pid; # it permit you to use /etc/init.d/nginx reload|restart|stop|start

events {
    worker_connections			1024;
}

http {
	include						/etc/nginx/mime.types;
	default_type				application/octet-stream;
	sendfile					on;
	access_log					/var/log/nginx/access.log;
	keepalive_timeout			3000;

	server {
		listen					80 default_server;
		listen					[::]:80 default_server;
		server_name				$host;
		location / {
			# update port as needed for host mapped https
			rewrite ^ https://$host$request_uri? permanent;
		}
	}

	server {
		# listen					80 default_server;
		# listen					[::]:80 default_server;
		listen					443 ssl http2 default_server;
		listen					[::]:443 ssl http2 default_server;
		ssl_certificate			/etc/ssl/certs/nginx-selfsigned.crt;
		ssl_certificate_key		/etc/ssl/private/nginx-selfsigned.key;
		ssl_protocols			TLSv1.2 TLSv1.3;

		# some security headers ( optional )
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer-when-downgrade" always;
		add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

		root					/www;
		index					index.html index.htm;
		server_name				localhost;
		client_max_body_size	32m;
		error_page				500 502 503 504  /50x.html;
		location = /50x.html {
			root				/var/lib/nginx/html;
		}
		# You may need this to prevent return 404 recursion.
		location = /404.html {
				internal;
		}
	}
}
